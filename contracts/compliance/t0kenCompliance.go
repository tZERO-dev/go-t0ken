// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package compliance

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// T0kenComplianceABI is the input ABI used to generate the binding from.
const T0kenComplianceABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransferTest\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"adminAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"},{\"name\":\"rules\",\"type\":\"address[]\"}],\"name\":\"setRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"}],\"name\":\"getRules\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canOverride\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setRegistryAndComplianceStore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"store\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"name\":\"count\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"setFrozen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canIssue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"isFrozen\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"}]"

// T0kenComplianceBin is the compiled bytecode used for deploying new contracts.
const T0kenComplianceBin = `6080604052600180546001600160a01b031916905534801561002057600080fd5b506040516132d43803806132d48339818101604052604081101561004357600080fd5b508051602090910151600080546001600160a01b03199081163317909155600580546001600160a01b03948516610100026001600160a81b031990911617905560068054939092169216919091179055613232806100a26000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80635acba201116100cd578063975057e711610081578063a5de361911610066578063a5de3619146104f1578063d69e70ba1461050b578063fd8258bd146105435761016c565b8063975057e7146104e1578063a4e2d634146104e95761016c565b80637b103999116100b25780637b103999146104a357806389ef8126146104ab5780638da5cb5b146104d95761016c565b80635acba2011461042b5780636d62a4fe146104675761016c565b806341c0e1b5116101245780634b0bddd2116101095780634b0bddd2146103cf5780634fb2e45d146103fd578063538ba4f9146104235761016c565b806341c0e1b51461034857806345178acb146103505761016c565b80632606b4c5116101555780632606b4c5146101cc5780632bdbc56f1461028757806330f047c3146102c05761016c565b8063211e28b61461017157806324d7806c14610192575b600080fd5b6101906004803603602081101561018757600080fd5b5035151561057f565b005b6101b8600480360360208110156101a857600080fd5b50356001600160a01b0316610650565b604080519115158252519081900360200190f35b610212600480360360a08110156101e257600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135909116906080013561067f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024c578181015183820152602001610234565b50505050905090810190601f1680156102795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a46004803603602081101561029d57600080fd5b5035611250565b604080516001600160a01b039092168252519081900360200190f35b610190600480360360608110156102d657600080fd5b6001600160a01b038235169160ff6020820135169181019060608101604082013564010000000081111561030957600080fd5b82018360208201111561031b57600080fd5b8035906020019184602083028401116401000000008311171561033d57600080fd5b509092509050611263565b610190611495565b61037f6004803603604081101561036657600080fd5b5080356001600160a01b0316906020013560ff1661151d565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103bb5781810151838201526020016103a3565b505050509050019250505060405180910390f35b610190600480360360408110156103e557600080fd5b506001600160a01b038135169060200135151561177d565b6101906004803603602081101561041357600080fd5b50356001600160a01b0316611933565b6102a4611aa5565b6101b86004803603608081101561044157600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611ab4565b6101b86004803603608081101561047d57600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611be8565b6102a4611d0e565b610190600480360360408110156104c157600080fd5b506001600160a01b0381358116916020013516611d22565b6102a4611deb565b6102a4611dfa565b6101b8611e09565b6104f9611e12565b60408051918252519081900360200190f35b6101906004803603606081101561052157600080fd5b506001600160a01b038135811691602081013590911690604001351515611e18565b6101b86004803603608081101561055957600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561210c565b6000546001600160a01b03163314806105a457506105a460023363ffffffff61221016565b6105f5576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b60055460ff161515811515141561063d5760405162461bcd60e51b81526004018080602001828103825260288152602001806131b36028913960400191505060405180910390fd5b6005805460ff1916911515919091179055565b600080546001600160a01b0383811691161480610679575061067960028363ffffffff61221016565b92915050565b606080600660009054906101000a90046001600160a01b03166001600160a01b0316637ae1cfca60405180604001604052806012815260200171436f6d706c69616e63652e667265657a657360701b815250896001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561070a57600080fd5b505afa15801561071e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561074757600080fd5b81019080805164010000000081111561075f57600080fd5b8201602081018481111561077257600080fd5b815164010000000081118282018710171561078c57600080fd5b5050929190505050886040516020018084805190602001908083835b602083106107c75780518252601f1990920191602091820191016107a8565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b6020831061080f5780518252601f1990920191602091820191016107f0565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561089b57600080fd5b505afa1580156108af573d6000803e3d6000fd5b505050506040513d60208110156108c557600080fd5b5051156108f15760405160200180602561318e8239602501905060405160208183030381529060405290505b600660009054906101000a90046001600160a01b03166001600160a01b0316637ae1cfca60405180604001604052806012815260200171436f6d706c69616e63652e667265657a657360701b815250896001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156109b657600080fd5b8101908080516401000000008111156109ce57600080fd5b820160208101848111156109e157600080fd5b81516401000000008111828201871017156109fb57600080fd5b5050929190505050876040516020018084805190602001908083835b60208310610a365780518252601f199092019160209182019101610a17565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610a7e5780518252601f199092019160209182019101610a5f565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b0a57600080fd5b505afa158015610b1e573d6000803e3d6000fd5b505050506040513d6020811015610b3457600080fd5b505115610c3257806000825111610b5a5760405180602001604052806000815250610b75565b604051806040016040528060018152602001600b60fa1b8152505b6040516020018083805190602001908083835b60208310610ba75780518252601f199092019160209182019101610b88565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610bef5780518252601f199092019160209182019101610bd0565b6001836020036101000a038019825116818451168082178552505050505050905001806131db602391396023019250505060405160208183030381529060405290505b60055460408051636f6072eb60e01b81526001600160a01b03888116600483015282516000948594859461010090920490931692636f6072eb92602480840193829003018186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d6040811015610cb057600080fd5b50805160209091015160015491935091506001600160a01b03808316911614610e3657836000855111610cf25760405180602001604052806000815250610d0d565b604051806040016040528060018152602001600b60fa1b8152505b610d1f836001600160a01b0316612245565b6040516020018084805190602001908083835b60208310610d515780518252601f199092019160209182019101610d32565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610d995780518252601f199092019160209182019101610d7a565b6001836020036101000a038019825116818451168082178552505050505050905001806131486024913960240182805190602001908083835b60208310610df15780518252601f199092019160209182019101610dd2565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b60055460408051636f6072eb60e01b81526001600160a01b038a8116600483015282516101009094041692636f6072eb92602480840193919291829003018186803b158015610e8457600080fd5b505afa158015610e98573d6000803e3d6000fd5b505050506040513d6040811015610eae57600080fd5b50805160209091015160015491945091506001600160a01b0380831691161461103457836000855111610ef05760405180602001604052806000815250610f0b565b604051806040016040528060018152602001600b60fa1b8152505b610f1d836001600160a01b0316612245565b6040516020018084805190602001908083835b60208310610f4f5780518252601f199092019160209182019101610f30565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610f975780518252601f199092019160209182019101610f78565b6001836020036101000a0380198251168184511680821785525050505050509050018061316c6022913960220182805190602001908083835b60208310610fef5780518252601f199092019160209182019101610fd0565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b60606110458b8b8b8b87898d6123c3565b9050846000865111801561105a575060008251115b611073576040518060200160405280600081525061108e565b604051806040016040528060018152602001600b60fa1b8152505b826040516020018084805190602001908083835b602083106110c15780518252601f1990920191602091820191016110a2565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b602083106111095780518252601f1990920191602091820191016110ea565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106111515780518252601f199092019160209182019101611132565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405294508460405160200180807f5b0000000000000000000000000000000000000000000000000000000000000081525060010182805190602001908083835b602083106111e45780518252601f1990920191602091820191016111c5565b6001836020036101000a038019825116818451168082178552505050505050905001807f5d000000000000000000000000000000000000000000000000000000000000008152506001019150506040516020818303038152906040529550505050505095945050505050565b600061067960028363ffffffff61287b16565b6000546001600160a01b0316331480611288575061128860023363ffffffff61221016565b6112d9576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b60608115611300576040519050606436038082016040526020810382528060846020840137505b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b602080840191825293516001600160a01b0390951694632e28d084948b938b93929091019182918083835b6020831061136f5780518252601f199092019160209182019101611350565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b8152600101935050505060405160208183030381529060405280519060200120836040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611429578181015183820152602001611411565b50505050905090810190601f1680156114565780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561147657600080fd5b505af115801561148a573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b03163314806114be57506001546000546001600160a01b039081169116145b61150f576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b6000546001600160a01b0316ff5b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b6020808401918252935160609586956001600160a01b039091169463c031a1809490938a938a9301918291908083835b602083106115915780518252601f199092019160209182019101611572565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b81526001019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561162c57600080fd5b505afa158015611640573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561166957600080fd5b81019080805164010000000081111561168157600080fd5b8201602081018481111561169457600080fd5b81516401000000008111828201871017156116ae57600080fd5b5050929190505050905060208151816116c357fe5b0615611716576040805162461bcd60e51b815260206004820152601360248201527f52756c65732061726520636f7272757074656400000000000000000000000000604482015290519081900360640190fd5b6060602082518161172357fe5b0460405190808252806020026020018201604052801561174d578160200160208202803883390190505b508051909150156117755760205b8251811161177357828101518282015260200161175b565b505b949350505050565b6000546001600160a01b03163314806117a657506001546000546001600160a01b039081169116145b6117f7576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b80156118985761180e60028363ffffffff61290116565b61185f576040805162461bcd60e51b815260206004820152601360248201527f556e61626c6520746f206164642061646d696e00000000000000000000000000604482015290519081900360640190fd5b6040516001600160a01b038316907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a261192f565b6118a960028363ffffffff6129a616565b6118fa576040805162461bcd60e51b815260206004820152601660248201527f556e61626c6520746f2072656d6f76652061646d696e00000000000000000000604482015290519081900360640190fd5b6040516001600160a01b038316907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a25b5050565b6000546001600160a01b031633148061195c57506001546000546001600160a01b039081169116145b6119ad576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b6000546001600160a01b03828116911614156119fa5760405162461bcd60e51b81526004018080602001828103825260258152602001806131236025913960400191505060405180910390fd5b6001600160a01b038116611a55576040805162461bcd60e51b815260206004820181905260248201527f4e6577204f776e65722063616e6e6f74206265207a65726f2061646472657373604482015290519081900360640190fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c99190a35050565b6001546001600160a01b031681565b6000611abf85610650565b611b10576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b611bdc336001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611b4c57600080fd5b505afa158015611b60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611b8957600080fd5b810190808051640100000000811115611ba157600080fd5b82016020810184811115611bb457600080fd5b8151640100000000811182820187101715611bce57600080fd5b505092919050505084612a91565b50600195945050505050565b60006060336001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611c2557600080fd5b505afa158015611c39573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611c6257600080fd5b810190808051640100000000811115611c7a57600080fd5b82016020810184811115611c8d57600080fd5b8151640100000000811182820187101715611ca757600080fd5b505092919050505090506000611cbd8287612a91565b90506000611ccb8387612a91565b9050866001600160a01b0316886001600160a01b031614611cf257611cf08389612a91565b505b611d0088888885858a612e19565b506001979650505050505050565b60055461010090046001600160a01b031681565b6000546001600160a01b0316331480611d4b57506001546000546001600160a01b039081169116145b611d9c576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0394851602179055600680546001600160a01b03191691909216179055565b6000546001600160a01b031681565b6006546001600160a01b031681565b60055460ff1681565b60025481565b6000546001600160a01b0316331480611e3d5750611e3d60023363ffffffff61221016565b611e8e576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b600660009054906101000a90046001600160a01b03166001600160a01b031663abfdcced60405180604001604052806012815260200171436f6d706c69616e63652e667265657a657360701b815250856001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015611f1657600080fd5b505afa158015611f2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611f5357600080fd5b810190808051640100000000811115611f6b57600080fd5b82016020810184811115611f7e57600080fd5b8151640100000000811182820187101715611f9857600080fd5b5050929190505050856040516020018084805190602001908083835b60208310611fd35780518252601f199092019160209182019101611fb4565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b6020831061201b5780518252601f199092019160209182019101611ffc565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b8152601401935050505060405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401808381526020018215151515815260200192505050600060405180830381600087803b1580156120b557600080fd5b505af11580156120c9573d6000803e3d6000fd5b505060405133925083151591506001600160a01b038516907f7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f43690600090a4505050565b60006060336001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561214957600080fd5b505afa15801561215d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561218657600080fd5b81019080805164010000000081111561219e57600080fd5b820160208101848111156121b157600080fd5b81516401000000008111828201871017156121cb57600080fd5b505092919050505090506121df8185612a91565b50846001600160a01b0316866001600160a01b031614611bdc576122038186612a91565b5050600195945050505050565b6001600160a01b0381166000908152600183016020526040812054600019018181128015906117755750925490921292915050565b60408051602a8082526060828101909352829190602082018180388339019050509050603060f81b8160008151811061227a57fe5b60200101906001600160f81b031916908160001a905350607860f81b816001815181106122a357fe5b60200101906001600160f81b031916908160001a90535060005b60148110156123bc5760008160130360080260020a856001600160a01b0316816122e357fe5b0460f81b9050600060108260f81c60ff16816122fb57fe5b0460f881811b9250601060ff90921691820284821c03901b90600a1161232a578160f81c60570160f81b612335565b8160f81c60300160f81b5b85856002026002018151811061234757fe5b60200101906001600160f81b031916908160001a905350600a60f882901c10612379578060f81c60570160f81b612384565b8060f81c60300160f81b5b85856002026003018151811061239657fe5b60200101906001600160f81b031916908160001a90535050600190920191506122bd9050565b5092915050565b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b6020808401918252935160609586956001600160a01b039091169463c031a1809490938f938c9301918291908083835b602083106124375780518252601f199092019160209182019101612418565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b81526001019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156124d257600080fd5b505afa1580156124e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561250f57600080fd5b81019080805164010000000081111561252757600080fd5b8201602081018481111561253a57600080fd5b815164010000000081118282018710171561255457600080fd5b505080519094501515925061257c915050575050604080516020810190915260008152612870565b602081518161258757fe5b06156125d0575050604080517f2252756c65732061726520636f727275707465642200000000000000000000006020820152815180820360150181526035909101909152612870565b6060600060205b835181116128695783810151604080517fa91895620000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038f811660248301528e811660448301528d811660648301528c8116608483015260ff8b1660a483015260c482018a905291519294506060929185169163a91895629160e480820192600092909190829003018186803b15801561267a57600080fd5b505afa15801561268e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156126b757600080fd5b8101908080516401000000008111156126cf57600080fd5b820160208101848111156126e257600080fd5b81516401000000008111828201871017156126fc57600080fd5b505080519094501592506128609150505783600085511161272c5760405180602001604052806000815250612747565b604051806040016040528060018152602001600b60fa1b8152505b826040516020018084805190602001908083835b6020831061277a5780518252601f19909201916020918201910161275b565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b602083106127c25780518252601f1990920191602091820191016127a3565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b81525060010182805190602001908083835b6020831061281b5780518252601f1990920191602091820191016127fc565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b506020016125d7565b5090925050505b979650505050505050565b600080821215801561288d5750825482125b6128de576040805162461bcd60e51b815260206004820152601860248201527f496e646578206f757473696465206f6620626f756e64732e0000000000000000604482015290519081900360640190fd5b50600101600090815260029190910160205260409020546001600160a01b031690565b60006001600160a01b03821661291957506000610679565b6001600160a01b0382166000908152600184016020526040812054600019019081128015906129485750835481125b15612957576000915050610679565b5050815460019081018084556001600160a01b0383166000818152838601602090815260408083208590559382526002870190529190912080546001600160a01b031916909117905592915050565b6001600160a01b038116600090815260018084016020526040822054908112806129d05750835481135b156129df576000915050610679565b8354811215612a4657835460009081526002850160208181526040808420546001600160a01b03168085526001890183528185208690558585529290915280832080546001600160a01b031990811690931790558654835290912080549091169055612a65565b6000818152600285016020526040902080546001600160a01b03191690555b50506001600160a01b031660009081526001828101602052604082209190915581546000190190915590565b600654604080518082018252601280825271436f6d706c69616e63652e667265657a657360701b6020808401918252935160009586956001600160a01b0390911694637ae1cfca9490938a938a9301918291908083835b60208310612b075780518252601f199092019160209182019101612ae8565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310612b4f5780518252601f199092019160209182019101612b30565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612bdb57600080fd5b505afa158015612bef573d6000803e3d6000fd5b505050506040513d6020811015612c0557600080fd5b505190508015612c5c576040805162461bcd60e51b815260206004820152601e60248201527f416464726573732069732066726f7a656e2061742074686520746f6b656e0000604482015290519081900360640190fd5b60055460408051636f6072eb60e01b81526001600160a01b0386811660048301528251600094859461010090910490921692636f6072eb926024808301939192829003018186803b158015612cb057600080fd5b505afa158015612cc4573d6000803e3d6000fd5b505050506040513d6040811015612cda57600080fd5b50805160209091015160015491935091506001600160a01b0380831691161461177357612d0f816001600160a01b0316612245565b60405160200180807f41646472657373206f72206c696e656167652069732066726f7a656e3a200000815250601e0182805190602001908083835b60208310612d695780518252601f199092019160209182019101612d4a565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183529384905262461bcd60e51b84526004840181815282516024860152825192965094508493604401925085019080838360005b83811015612dde578181015183820152602001612dc6565b50505050905090810190601f168015612e0b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006040518060400160405280601081526020016f436f6d706c69616e63652e72756c657360801b81525033856040516020018084805190602001908083835b60208310612e785780518252601f199092019160209182019101612e59565b51815160209384036101000a6000190180199092169116179052606096871b6bffffffffffffffffffffffff19169190930190815260f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660148501525060408051808503600a1901815260158501808352815191909301206006547fc031a180000000000000000000000000000000000000000000000000000000009093526019850181905290519096509394506001600160a01b03169263c031a180926039808201935060009291829003018186803b158015612f5b57600080fd5b505afa158015612f6f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612f9857600080fd5b810190808051640100000000811115612fb057600080fd5b82016020810184811115612fc357600080fd5b8151640100000000811182820187101715612fdd57600080fd5b5050805190945015159250612ff691505057505061311a565b602081518161300157fe5b0615613054576040805162461bcd60e51b815260206004820152601360248201527f52756c65732061726520636f7272757074656400000000000000000000000000604482015290519081900360640190fd5b600060205b825181116131155782810151604080517f5a47e1c70000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038d811660248301528c811660448301528b8116606483015260ff8a16608483015260a48201899052915192945090841691635a47e1c79160c48082019260009290919082900301818387803b1580156130f257600080fd5b505af1158015613106573d6000803e3d6000fd5b50505050602081019050613059565b505050505b50505050505056fe4e6577204f776e65722063616e6e6f74206265207468652063757272656e74206f776e65722246726f6d2061646472657373206f72206c696e656167652069732066726f7a656e3a2022546f2061646472657373206f72206c696e656167652069732066726f7a656e3a202246726f6d20616464726573732069732066726f7a656e2061742074686520746f6b656e22436f6e747261637420616c726561647920696e20726571756573746564206c6f636b20737461746522546f20616464726573732069732066726f7a656e2061742074686520746f6b656e22a265627a7a723058205c460b379756382ded334a3ba8f83c4583e361fbe8df1bdd06dc99a4c3c2e38f64736f6c63430005090032`

// DeployT0kenCompliance deploys a new Ethereum contract, binding an instance of T0kenCompliance to it.
func DeployT0kenCompliance(auth *bind.TransactOpts, backend bind.ContractBackend, r common.Address, s common.Address) (common.Address, *types.Transaction, *T0kenCompliance, error) {
	parsed, err := abi.JSON(strings.NewReader(T0kenComplianceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(T0kenComplianceBin), backend, r, s)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &T0kenCompliance{T0kenComplianceCaller: T0kenComplianceCaller{contract: contract}, T0kenComplianceTransactor: T0kenComplianceTransactor{contract: contract}, T0kenComplianceFilterer: T0kenComplianceFilterer{contract: contract}}, nil
}

// T0kenCompliance is an auto generated Go binding around an Ethereum contract.
type T0kenCompliance struct {
	T0kenComplianceCaller     // Read-only binding to the contract
	T0kenComplianceTransactor // Write-only binding to the contract
	T0kenComplianceFilterer   // Log filterer for contract events
}

// T0kenComplianceCaller is an auto generated read-only Go binding around an Ethereum contract.
type T0kenComplianceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type T0kenComplianceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type T0kenComplianceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type T0kenComplianceSession struct {
	Contract     *T0kenCompliance  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// T0kenComplianceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type T0kenComplianceCallerSession struct {
	Contract *T0kenComplianceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// T0kenComplianceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type T0kenComplianceTransactorSession struct {
	Contract     *T0kenComplianceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// T0kenComplianceRaw is an auto generated low-level Go binding around an Ethereum contract.
type T0kenComplianceRaw struct {
	Contract *T0kenCompliance // Generic contract binding to access the raw methods on
}

// T0kenComplianceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type T0kenComplianceCallerRaw struct {
	Contract *T0kenComplianceCaller // Generic read-only contract binding to access the raw methods on
}

// T0kenComplianceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type T0kenComplianceTransactorRaw struct {
	Contract *T0kenComplianceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewT0kenCompliance creates a new instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenCompliance(address common.Address, backend bind.ContractBackend) (*T0kenCompliance, error) {
	contract, err := bindT0kenCompliance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &T0kenCompliance{T0kenComplianceCaller: T0kenComplianceCaller{contract: contract}, T0kenComplianceTransactor: T0kenComplianceTransactor{contract: contract}, T0kenComplianceFilterer: T0kenComplianceFilterer{contract: contract}}, nil
}

// NewT0kenComplianceCaller creates a new read-only instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceCaller(address common.Address, caller bind.ContractCaller) (*T0kenComplianceCaller, error) {
	contract, err := bindT0kenCompliance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceCaller{contract: contract}, nil
}

// NewT0kenComplianceTransactor creates a new write-only instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceTransactor(address common.Address, transactor bind.ContractTransactor) (*T0kenComplianceTransactor, error) {
	contract, err := bindT0kenCompliance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceTransactor{contract: contract}, nil
}

// NewT0kenComplianceFilterer creates a new log filterer instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceFilterer(address common.Address, filterer bind.ContractFilterer) (*T0kenComplianceFilterer, error) {
	contract, err := bindT0kenCompliance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceFilterer{contract: contract}, nil
}

// bindT0kenCompliance binds a generic wrapper to an already deployed contract.
func bindT0kenCompliance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(T0kenComplianceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_T0kenCompliance *T0kenComplianceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _T0kenCompliance.Contract.T0kenComplianceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_T0kenCompliance *T0kenComplianceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.T0kenComplianceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_T0kenCompliance *T0kenComplianceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.T0kenComplianceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_T0kenCompliance *T0kenComplianceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _T0kenCompliance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_T0kenCompliance *T0kenComplianceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_T0kenCompliance *T0kenComplianceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.contract.Transact(opts, method, params...)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) ZEROADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "ZERO_ADDRESS")
	return *ret0, err
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) ZEROADDRESS() (common.Address, error) {
	return _T0kenCompliance.Contract.ZEROADDRESS(&_T0kenCompliance.CallOpts)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) ZEROADDRESS() (common.Address, error) {
	return _T0kenCompliance.Contract.ZEROADDRESS(&_T0kenCompliance.CallOpts)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) AdminAt(opts *bind.CallOpts, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "adminAt", index)
	return *ret0, err
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) AdminAt(index *big.Int) (common.Address, error) {
	return _T0kenCompliance.Contract.AdminAt(&_T0kenCompliance.CallOpts, index)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) AdminAt(index *big.Int) (common.Address, error) {
	return _T0kenCompliance.Contract.AdminAt(&_T0kenCompliance.CallOpts, index)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceCaller) Admins(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "admins")
	return *ret0, err
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceSession) Admins() (*big.Int, error) {
	return _T0kenCompliance.Contract.Admins(&_T0kenCompliance.CallOpts)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceCallerSession) Admins() (*big.Int, error) {
	return _T0kenCompliance.Contract.Admins(&_T0kenCompliance.CallOpts)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceCaller) CanTransferTest(opts *bind.CallOpts, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "canTransferTest", token, initiator, from, to, tokens)
	return *ret0, err
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _T0kenCompliance.Contract.CanTransferTest(&_T0kenCompliance.CallOpts, token, initiator, from, to, tokens)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceCallerSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _T0kenCompliance.Contract.CanTransferTest(&_T0kenCompliance.CallOpts, token, initiator, from, to, tokens)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceCaller) GetRules(opts *bind.CallOpts, token common.Address, kind uint8) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "getRules", token, kind)
	return *ret0, err
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _T0kenCompliance.Contract.GetRules(&_T0kenCompliance.CallOpts, token, kind)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceCallerSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _T0kenCompliance.Contract.GetRules(&_T0kenCompliance.CallOpts, token, kind)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCaller) IsAdmin(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "isAdmin", addr)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) IsAdmin(addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsAdmin(&_T0kenCompliance.CallOpts, addr)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCallerSession) IsAdmin(addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsAdmin(&_T0kenCompliance.CallOpts, addr)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCaller) IsLocked(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "isLocked")
	return *ret0, err
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) IsLocked() (bool, error) {
	return _T0kenCompliance.Contract.IsLocked(&_T0kenCompliance.CallOpts)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCallerSession) IsLocked() (bool, error) {
	return _T0kenCompliance.Contract.IsLocked(&_T0kenCompliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Owner() (common.Address, error) {
	return _T0kenCompliance.Contract.Owner(&_T0kenCompliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Owner() (common.Address, error) {
	return _T0kenCompliance.Contract.Owner(&_T0kenCompliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Registry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "registry")
	return *ret0, err
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Registry() (common.Address, error) {
	return _T0kenCompliance.Contract.Registry(&_T0kenCompliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Registry() (common.Address, error) {
	return _T0kenCompliance.Contract.Registry(&_T0kenCompliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Store(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "store")
	return *ret0, err
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Store() (common.Address, error) {
	return _T0kenCompliance.Contract.Store(&_T0kenCompliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Store() (common.Address, error) {
	return _T0kenCompliance.Contract.Store(&_T0kenCompliance.CallOpts)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanIssue(opts *bind.TransactOpts, issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canIssue", issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanIssue(&_T0kenCompliance.TransactOpts, issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanIssue(&_T0kenCompliance.TransactOpts, issuer, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanOverride(opts *bind.TransactOpts, admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canOverride", admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanOverride(&_T0kenCompliance.TransactOpts, admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanOverride(&_T0kenCompliance.TransactOpts, admin, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanTransfer(opts *bind.TransactOpts, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canTransfer", initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanTransfer(&_T0kenCompliance.TransactOpts, initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanTransfer(&_T0kenCompliance.TransactOpts, initiator, from, to, tokens)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceSession) Kill() (*types.Transaction, error) {
	return _T0kenCompliance.Contract.Kill(&_T0kenCompliance.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) Kill() (*types.Transaction, error) {
	return _T0kenCompliance.Contract.Kill(&_T0kenCompliance.TransactOpts)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetAdmin(opts *bind.TransactOpts, addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setAdmin", addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetAdmin(&_T0kenCompliance.TransactOpts, addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetAdmin(&_T0kenCompliance.TransactOpts, addr, add)
}

// SetFrozen is a paid mutator transaction binding the contract method 0xd69e70ba.
//
// Solidity: function setFrozen(token address, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetFrozen(opts *bind.TransactOpts, token common.Address, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setFrozen", token, addr, freeze)
}

// SetFrozen is a paid mutator transaction binding the contract method 0xd69e70ba.
//
// Solidity: function setFrozen(token address, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetFrozen(token common.Address, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFrozen(&_T0kenCompliance.TransactOpts, token, addr, freeze)
}

// SetFrozen is a paid mutator transaction binding the contract method 0xd69e70ba.
//
// Solidity: function setFrozen(token address, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetFrozen(token common.Address, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFrozen(&_T0kenCompliance.TransactOpts, token, addr, freeze)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetLocked(opts *bind.TransactOpts, locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setLocked", locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetLocked(&_T0kenCompliance.TransactOpts, locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetLocked(&_T0kenCompliance.TransactOpts, locked)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetRegistryAndComplianceStore(opts *bind.TransactOpts, r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setRegistryAndComplianceStore", r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRegistryAndComplianceStore(&_T0kenCompliance.TransactOpts, r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRegistryAndComplianceStore(&_T0kenCompliance.TransactOpts, r, s)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetRules(opts *bind.TransactOpts, token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setRules", token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRules(&_T0kenCompliance.TransactOpts, token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRules(&_T0kenCompliance.TransactOpts, token, kind, rules)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) TransferOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "transferOwner", newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.TransferOwner(&_T0kenCompliance.TransactOpts, newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.TransferOwner(&_T0kenCompliance.TransactOpts, newOwner)
}

// T0kenComplianceAddressFrozenIterator is returned from FilterAddressFrozen and is used to iterate over the raw logs and unpacked data for AddressFrozen events raised by the T0kenCompliance contract.
type T0kenComplianceAddressFrozenIterator struct {
	Event *T0kenComplianceAddressFrozen // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAddressFrozenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAddressFrozen)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAddressFrozen)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAddressFrozenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAddressFrozenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAddressFrozen represents a AddressFrozen event raised by the T0kenCompliance contract.
type T0kenComplianceAddressFrozen struct {
	Addr     common.Address
	IsFrozen bool
	Owner    common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterAddressFrozen is a free log retrieval operation binding the contract event 0x7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436.
//
// Solidity: e AddressFrozen(addr indexed address, isFrozen indexed bool, owner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAddressFrozen(opts *bind.FilterOpts, addr []common.Address, isFrozen []bool, owner []common.Address) (*T0kenComplianceAddressFrozenIterator, error) {

	var addrRule []interface{}
	for _, addrItem := range addr {
		addrRule = append(addrRule, addrItem)
	}
	var isFrozenRule []interface{}
	for _, isFrozenItem := range isFrozen {
		isFrozenRule = append(isFrozenRule, isFrozenItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AddressFrozen", addrRule, isFrozenRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAddressFrozenIterator{contract: _T0kenCompliance.contract, event: "AddressFrozen", logs: logs, sub: sub}, nil
}

// WatchAddressFrozen is a free log subscription operation binding the contract event 0x7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436.
//
// Solidity: e AddressFrozen(addr indexed address, isFrozen indexed bool, owner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAddressFrozen(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAddressFrozen, addr []common.Address, isFrozen []bool, owner []common.Address) (event.Subscription, error) {

	var addrRule []interface{}
	for _, addrItem := range addr {
		addrRule = append(addrRule, addrItem)
	}
	var isFrozenRule []interface{}
	for _, isFrozenItem := range isFrozen {
		isFrozenRule = append(isFrozenRule, isFrozenItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AddressFrozen", addrRule, isFrozenRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAddressFrozen)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AddressFrozen", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceAdminAddedIterator is returned from FilterAdminAdded and is used to iterate over the raw logs and unpacked data for AdminAdded events raised by the T0kenCompliance contract.
type T0kenComplianceAdminAddedIterator struct {
	Event *T0kenComplianceAdminAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAdminAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAdminAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAdminAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAdminAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAdminAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAdminAdded represents a AdminAdded event raised by the T0kenCompliance contract.
type T0kenComplianceAdminAdded struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminAdded is a free log retrieval operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAdminAdded(opts *bind.FilterOpts, admin []common.Address) (*T0kenComplianceAdminAddedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAdminAddedIterator{contract: _T0kenCompliance.contract, event: "AdminAdded", logs: logs, sub: sub}, nil
}

// WatchAdminAdded is a free log subscription operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAdminAdded(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAdminAdded, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAdminAdded)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AdminAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceAdminRemovedIterator is returned from FilterAdminRemoved and is used to iterate over the raw logs and unpacked data for AdminRemoved events raised by the T0kenCompliance contract.
type T0kenComplianceAdminRemovedIterator struct {
	Event *T0kenComplianceAdminRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAdminRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAdminRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAdminRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAdminRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAdminRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAdminRemoved represents a AdminRemoved event raised by the T0kenCompliance contract.
type T0kenComplianceAdminRemoved struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminRemoved is a free log retrieval operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAdminRemoved(opts *bind.FilterOpts, admin []common.Address) (*T0kenComplianceAdminRemovedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAdminRemovedIterator{contract: _T0kenCompliance.contract, event: "AdminRemoved", logs: logs, sub: sub}, nil
}

// WatchAdminRemoved is a free log subscription operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAdminRemoved(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAdminRemoved, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAdminRemoved)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AdminRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceOwnerTransferredIterator is returned from FilterOwnerTransferred and is used to iterate over the raw logs and unpacked data for OwnerTransferred events raised by the T0kenCompliance contract.
type T0kenComplianceOwnerTransferredIterator struct {
	Event *T0kenComplianceOwnerTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceOwnerTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceOwnerTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceOwnerTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceOwnerTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceOwnerTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceOwnerTransferred represents a OwnerTransferred event raised by the T0kenCompliance contract.
type T0kenComplianceOwnerTransferred struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerTransferred is a free log retrieval operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterOwnerTransferred(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*T0kenComplianceOwnerTransferredIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceOwnerTransferredIterator{contract: _T0kenCompliance.contract, event: "OwnerTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnerTransferred is a free log subscription operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchOwnerTransferred(opts *bind.WatchOpts, sink chan<- *T0kenComplianceOwnerTransferred, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceOwnerTransferred)
				if err := _T0kenCompliance.contract.UnpackLog(event, "OwnerTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
