// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package compliance

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// T0kenComplianceABI is the input ABI used to generate the binding from.
const T0kenComplianceABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"setFrozen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransferTest\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"level\",\"type\":\"int8\"}],\"name\":\"setFreezeLevel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"adminAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"},{\"name\":\"rules\",\"type\":\"address[]\"}],\"name\":\"setRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"}],\"name\":\"getRules\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canOverride\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setRegistryAndComplianceStore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"store\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"name\":\"count\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canIssue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"isFrozen\",\"type\":\"bool\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"}]"

// T0kenComplianceBin is the compiled bytecode used for deploying new contracts.
const T0kenComplianceBin = ``

// DeployT0kenCompliance deploys a new Ethereum contract, binding an instance of T0kenCompliance to it.
func DeployT0kenCompliance(auth *bind.TransactOpts, backend bind.ContractBackend, r common.Address, s common.Address) (common.Address, *types.Transaction, *T0kenCompliance, error) {
	parsed, err := abi.JSON(strings.NewReader(T0kenComplianceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(T0kenComplianceBin), backend, r, s)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &T0kenCompliance{T0kenComplianceCaller: T0kenComplianceCaller{contract: contract}, T0kenComplianceTransactor: T0kenComplianceTransactor{contract: contract}, T0kenComplianceFilterer: T0kenComplianceFilterer{contract: contract}}, nil
}

// T0kenCompliance is an auto generated Go binding around an Ethereum contract.
type T0kenCompliance struct {
	T0kenComplianceCaller     // Read-only binding to the contract
	T0kenComplianceTransactor // Write-only binding to the contract
	T0kenComplianceFilterer   // Log filterer for contract events
}

// T0kenComplianceCaller is an auto generated read-only Go binding around an Ethereum contract.
type T0kenComplianceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type T0kenComplianceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type T0kenComplianceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// T0kenComplianceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type T0kenComplianceSession struct {
	Contract     *T0kenCompliance  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// T0kenComplianceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type T0kenComplianceCallerSession struct {
	Contract *T0kenComplianceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// T0kenComplianceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type T0kenComplianceTransactorSession struct {
	Contract     *T0kenComplianceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// T0kenComplianceRaw is an auto generated low-level Go binding around an Ethereum contract.
type T0kenComplianceRaw struct {
	Contract *T0kenCompliance // Generic contract binding to access the raw methods on
}

// T0kenComplianceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type T0kenComplianceCallerRaw struct {
	Contract *T0kenComplianceCaller // Generic read-only contract binding to access the raw methods on
}

// T0kenComplianceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type T0kenComplianceTransactorRaw struct {
	Contract *T0kenComplianceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewT0kenCompliance creates a new instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenCompliance(address common.Address, backend bind.ContractBackend) (*T0kenCompliance, error) {
	contract, err := bindT0kenCompliance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &T0kenCompliance{T0kenComplianceCaller: T0kenComplianceCaller{contract: contract}, T0kenComplianceTransactor: T0kenComplianceTransactor{contract: contract}, T0kenComplianceFilterer: T0kenComplianceFilterer{contract: contract}}, nil
}

// NewT0kenComplianceCaller creates a new read-only instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceCaller(address common.Address, caller bind.ContractCaller) (*T0kenComplianceCaller, error) {
	contract, err := bindT0kenCompliance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceCaller{contract: contract}, nil
}

// NewT0kenComplianceTransactor creates a new write-only instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceTransactor(address common.Address, transactor bind.ContractTransactor) (*T0kenComplianceTransactor, error) {
	contract, err := bindT0kenCompliance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceTransactor{contract: contract}, nil
}

// NewT0kenComplianceFilterer creates a new log filterer instance of T0kenCompliance, bound to a specific deployed contract.
func NewT0kenComplianceFilterer(address common.Address, filterer bind.ContractFilterer) (*T0kenComplianceFilterer, error) {
	contract, err := bindT0kenCompliance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceFilterer{contract: contract}, nil
}

// bindT0kenCompliance binds a generic wrapper to an already deployed contract.
func bindT0kenCompliance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(T0kenComplianceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_T0kenCompliance *T0kenComplianceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _T0kenCompliance.Contract.T0kenComplianceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_T0kenCompliance *T0kenComplianceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.T0kenComplianceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_T0kenCompliance *T0kenComplianceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.T0kenComplianceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_T0kenCompliance *T0kenComplianceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _T0kenCompliance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_T0kenCompliance *T0kenComplianceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_T0kenCompliance *T0kenComplianceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.contract.Transact(opts, method, params...)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) ZEROADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "ZERO_ADDRESS")
	return *ret0, err
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) ZEROADDRESS() (common.Address, error) {
	return _T0kenCompliance.Contract.ZEROADDRESS(&_T0kenCompliance.CallOpts)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) ZEROADDRESS() (common.Address, error) {
	return _T0kenCompliance.Contract.ZEROADDRESS(&_T0kenCompliance.CallOpts)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) AdminAt(opts *bind.CallOpts, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "adminAt", index)
	return *ret0, err
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) AdminAt(index *big.Int) (common.Address, error) {
	return _T0kenCompliance.Contract.AdminAt(&_T0kenCompliance.CallOpts, index)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) AdminAt(index *big.Int) (common.Address, error) {
	return _T0kenCompliance.Contract.AdminAt(&_T0kenCompliance.CallOpts, index)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceCaller) Admins(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "admins")
	return *ret0, err
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceSession) Admins() (*big.Int, error) {
	return _T0kenCompliance.Contract.Admins(&_T0kenCompliance.CallOpts)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_T0kenCompliance *T0kenComplianceCallerSession) Admins() (*big.Int, error) {
	return _T0kenCompliance.Contract.Admins(&_T0kenCompliance.CallOpts)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceCaller) CanTransferTest(opts *bind.CallOpts, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "canTransferTest", token, initiator, from, to, tokens)
	return *ret0, err
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _T0kenCompliance.Contract.CanTransferTest(&_T0kenCompliance.CallOpts, token, initiator, from, to, tokens)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_T0kenCompliance *T0kenComplianceCallerSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _T0kenCompliance.Contract.CanTransferTest(&_T0kenCompliance.CallOpts, token, initiator, from, to, tokens)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceCaller) GetRules(opts *bind.CallOpts, token common.Address, kind uint8) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "getRules", token, kind)
	return *ret0, err
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _T0kenCompliance.Contract.GetRules(&_T0kenCompliance.CallOpts, token, kind)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_T0kenCompliance *T0kenComplianceCallerSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _T0kenCompliance.Contract.GetRules(&_T0kenCompliance.CallOpts, token, kind)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCaller) IsAdmin(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "isAdmin", addr)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) IsAdmin(addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsAdmin(&_T0kenCompliance.CallOpts, addr)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCallerSession) IsAdmin(addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsAdmin(&_T0kenCompliance.CallOpts, addr)
}

// IsFrozen is a free data retrieval call binding the contract method 0x4de0267b.
//
// Solidity: function isFrozen(symbol string, addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCaller) IsFrozen(opts *bind.CallOpts, symbol string, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "isFrozen", symbol, addr)
	return *ret0, err
}

// IsFrozen is a free data retrieval call binding the contract method 0x4de0267b.
//
// Solidity: function isFrozen(symbol string, addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) IsFrozen(symbol string, addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsFrozen(&_T0kenCompliance.CallOpts, symbol, addr)
}

// IsFrozen is a free data retrieval call binding the contract method 0x4de0267b.
//
// Solidity: function isFrozen(symbol string, addr address) constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCallerSession) IsFrozen(symbol string, addr common.Address) (bool, error) {
	return _T0kenCompliance.Contract.IsFrozen(&_T0kenCompliance.CallOpts, symbol, addr)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCaller) IsLocked(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "isLocked")
	return *ret0, err
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) IsLocked() (bool, error) {
	return _T0kenCompliance.Contract.IsLocked(&_T0kenCompliance.CallOpts)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_T0kenCompliance *T0kenComplianceCallerSession) IsLocked() (bool, error) {
	return _T0kenCompliance.Contract.IsLocked(&_T0kenCompliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Owner() (common.Address, error) {
	return _T0kenCompliance.Contract.Owner(&_T0kenCompliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Owner() (common.Address, error) {
	return _T0kenCompliance.Contract.Owner(&_T0kenCompliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Registry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "registry")
	return *ret0, err
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Registry() (common.Address, error) {
	return _T0kenCompliance.Contract.Registry(&_T0kenCompliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Registry() (common.Address, error) {
	return _T0kenCompliance.Contract.Registry(&_T0kenCompliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCaller) Store(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _T0kenCompliance.contract.Call(opts, out, "store")
	return *ret0, err
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceSession) Store() (common.Address, error) {
	return _T0kenCompliance.Contract.Store(&_T0kenCompliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_T0kenCompliance *T0kenComplianceCallerSession) Store() (common.Address, error) {
	return _T0kenCompliance.Contract.Store(&_T0kenCompliance.CallOpts)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanIssue(opts *bind.TransactOpts, issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canIssue", issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanIssue(&_T0kenCompliance.TransactOpts, issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanIssue(&_T0kenCompliance.TransactOpts, issuer, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanOverride(opts *bind.TransactOpts, admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canOverride", admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanOverride(&_T0kenCompliance.TransactOpts, admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanOverride(&_T0kenCompliance.TransactOpts, admin, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactor) CanTransfer(opts *bind.TransactOpts, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "canTransfer", initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanTransfer(&_T0kenCompliance.TransactOpts, initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_T0kenCompliance *T0kenComplianceTransactorSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.CanTransfer(&_T0kenCompliance.TransactOpts, initiator, from, to, tokens)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceSession) Kill() (*types.Transaction, error) {
	return _T0kenCompliance.Contract.Kill(&_T0kenCompliance.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) Kill() (*types.Transaction, error) {
	return _T0kenCompliance.Contract.Kill(&_T0kenCompliance.TransactOpts)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetAdmin(opts *bind.TransactOpts, addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setAdmin", addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetAdmin(&_T0kenCompliance.TransactOpts, addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetAdmin(&_T0kenCompliance.TransactOpts, addr, add)
}

// SetFreezeLevel is a paid mutator transaction binding the contract method 0x2976a562.
//
// Solidity: function setFreezeLevel(level int8) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetFreezeLevel(opts *bind.TransactOpts, level int8) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setFreezeLevel", level)
}

// SetFreezeLevel is a paid mutator transaction binding the contract method 0x2976a562.
//
// Solidity: function setFreezeLevel(level int8) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetFreezeLevel(level int8) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFreezeLevel(&_T0kenCompliance.TransactOpts, level)
}

// SetFreezeLevel is a paid mutator transaction binding the contract method 0x2976a562.
//
// Solidity: function setFreezeLevel(level int8) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetFreezeLevel(level int8) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFreezeLevel(&_T0kenCompliance.TransactOpts, level)
}

// SetFrozen is a paid mutator transaction binding the contract method 0x2192e9ca.
//
// Solidity: function setFrozen(symbol string, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetFrozen(opts *bind.TransactOpts, symbol string, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setFrozen", symbol, addr, freeze)
}

// SetFrozen is a paid mutator transaction binding the contract method 0x2192e9ca.
//
// Solidity: function setFrozen(symbol string, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetFrozen(symbol string, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFrozen(&_T0kenCompliance.TransactOpts, symbol, addr, freeze)
}

// SetFrozen is a paid mutator transaction binding the contract method 0x2192e9ca.
//
// Solidity: function setFrozen(symbol string, addr address, freeze bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetFrozen(symbol string, addr common.Address, freeze bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetFrozen(&_T0kenCompliance.TransactOpts, symbol, addr, freeze)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetLocked(opts *bind.TransactOpts, locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setLocked", locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetLocked(&_T0kenCompliance.TransactOpts, locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetLocked(&_T0kenCompliance.TransactOpts, locked)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetRegistryAndComplianceStore(opts *bind.TransactOpts, r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setRegistryAndComplianceStore", r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRegistryAndComplianceStore(&_T0kenCompliance.TransactOpts, r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRegistryAndComplianceStore(&_T0kenCompliance.TransactOpts, r, s)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) SetRules(opts *bind.TransactOpts, token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "setRules", token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRules(&_T0kenCompliance.TransactOpts, token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.SetRules(&_T0kenCompliance.TransactOpts, token, kind, rules)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceTransactor) TransferOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.contract.Transact(opts, "transferOwner", newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.TransferOwner(&_T0kenCompliance.TransactOpts, newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_T0kenCompliance *T0kenComplianceTransactorSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _T0kenCompliance.Contract.TransferOwner(&_T0kenCompliance.TransactOpts, newOwner)
}

// T0kenComplianceAddressFrozenIterator is returned from FilterAddressFrozen and is used to iterate over the raw logs and unpacked data for AddressFrozen events raised by the T0kenCompliance contract.
type T0kenComplianceAddressFrozenIterator struct {
	Event *T0kenComplianceAddressFrozen // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAddressFrozenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAddressFrozen)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAddressFrozen)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAddressFrozenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAddressFrozenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAddressFrozen represents a AddressFrozen event raised by the T0kenCompliance contract.
type T0kenComplianceAddressFrozen struct {
	Addr     common.Address
	IsFrozen bool
	Owner    common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterAddressFrozen is a free log retrieval operation binding the contract event 0x7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436.
//
// Solidity: e AddressFrozen(addr indexed address, isFrozen indexed bool, owner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAddressFrozen(opts *bind.FilterOpts, addr []common.Address, isFrozen []bool, owner []common.Address) (*T0kenComplianceAddressFrozenIterator, error) {

	var addrRule []interface{}
	for _, addrItem := range addr {
		addrRule = append(addrRule, addrItem)
	}
	var isFrozenRule []interface{}
	for _, isFrozenItem := range isFrozen {
		isFrozenRule = append(isFrozenRule, isFrozenItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AddressFrozen", addrRule, isFrozenRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAddressFrozenIterator{contract: _T0kenCompliance.contract, event: "AddressFrozen", logs: logs, sub: sub}, nil
}

// WatchAddressFrozen is a free log subscription operation binding the contract event 0x7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436.
//
// Solidity: e AddressFrozen(addr indexed address, isFrozen indexed bool, owner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAddressFrozen(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAddressFrozen, addr []common.Address, isFrozen []bool, owner []common.Address) (event.Subscription, error) {

	var addrRule []interface{}
	for _, addrItem := range addr {
		addrRule = append(addrRule, addrItem)
	}
	var isFrozenRule []interface{}
	for _, isFrozenItem := range isFrozen {
		isFrozenRule = append(isFrozenRule, isFrozenItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AddressFrozen", addrRule, isFrozenRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAddressFrozen)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AddressFrozen", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceAdminAddedIterator is returned from FilterAdminAdded and is used to iterate over the raw logs and unpacked data for AdminAdded events raised by the T0kenCompliance contract.
type T0kenComplianceAdminAddedIterator struct {
	Event *T0kenComplianceAdminAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAdminAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAdminAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAdminAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAdminAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAdminAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAdminAdded represents a AdminAdded event raised by the T0kenCompliance contract.
type T0kenComplianceAdminAdded struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminAdded is a free log retrieval operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAdminAdded(opts *bind.FilterOpts, admin []common.Address) (*T0kenComplianceAdminAddedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAdminAddedIterator{contract: _T0kenCompliance.contract, event: "AdminAdded", logs: logs, sub: sub}, nil
}

// WatchAdminAdded is a free log subscription operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAdminAdded(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAdminAdded, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAdminAdded)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AdminAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceAdminRemovedIterator is returned from FilterAdminRemoved and is used to iterate over the raw logs and unpacked data for AdminRemoved events raised by the T0kenCompliance contract.
type T0kenComplianceAdminRemovedIterator struct {
	Event *T0kenComplianceAdminRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceAdminRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceAdminRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceAdminRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceAdminRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceAdminRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceAdminRemoved represents a AdminRemoved event raised by the T0kenCompliance contract.
type T0kenComplianceAdminRemoved struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminRemoved is a free log retrieval operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterAdminRemoved(opts *bind.FilterOpts, admin []common.Address) (*T0kenComplianceAdminRemovedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceAdminRemovedIterator{contract: _T0kenCompliance.contract, event: "AdminRemoved", logs: logs, sub: sub}, nil
}

// WatchAdminRemoved is a free log subscription operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchAdminRemoved(opts *bind.WatchOpts, sink chan<- *T0kenComplianceAdminRemoved, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceAdminRemoved)
				if err := _T0kenCompliance.contract.UnpackLog(event, "AdminRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// T0kenComplianceOwnerTransferredIterator is returned from FilterOwnerTransferred and is used to iterate over the raw logs and unpacked data for OwnerTransferred events raised by the T0kenCompliance contract.
type T0kenComplianceOwnerTransferredIterator struct {
	Event *T0kenComplianceOwnerTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *T0kenComplianceOwnerTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(T0kenComplianceOwnerTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(T0kenComplianceOwnerTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *T0kenComplianceOwnerTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *T0kenComplianceOwnerTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// T0kenComplianceOwnerTransferred represents a OwnerTransferred event raised by the T0kenCompliance contract.
type T0kenComplianceOwnerTransferred struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerTransferred is a free log retrieval operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) FilterOwnerTransferred(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*T0kenComplianceOwnerTransferredIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.FilterLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &T0kenComplianceOwnerTransferredIterator{contract: _T0kenCompliance.contract, event: "OwnerTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnerTransferred is a free log subscription operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_T0kenCompliance *T0kenComplianceFilterer) WatchOwnerTransferred(opts *bind.WatchOpts, sink chan<- *T0kenComplianceOwnerTransferred, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _T0kenCompliance.contract.WatchLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(T0kenComplianceOwnerTransferred)
				if err := _T0kenCompliance.contract.UnpackLog(event, "OwnerTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
