// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rules

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// RestrictHolderThresholdABI is the input ABI used to generate the binding from.
const RestrictHolderThresholdABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractIT0ken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractICompliance\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setNonAccreditedInvestorLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractICompliance\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setTotalLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"contractICompliance\",\"name\":\"compliance\",\"type\":\"address\"},{\"internalType\":\"contractIT0ken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"test\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contractICompliance\",\"name\":\"c\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"adding\",\"type\":\"bool\"}],\"name\":\"updateNonAccreditedInvestor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// RestrictHolderThresholdBin is the compiled bytecode used for deploying new contracts.
const RestrictHolderThresholdBin = ``

// DeployRestrictHolderThreshold deploys a new Ethereum contract, binding an instance of RestrictHolderThreshold to it.
func DeployRestrictHolderThreshold(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *RestrictHolderThreshold, error) {
	parsed, err := abi.JSON(strings.NewReader(RestrictHolderThresholdABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RestrictHolderThresholdBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RestrictHolderThreshold{RestrictHolderThresholdCaller: RestrictHolderThresholdCaller{contract: contract}, RestrictHolderThresholdTransactor: RestrictHolderThresholdTransactor{contract: contract}, RestrictHolderThresholdFilterer: RestrictHolderThresholdFilterer{contract: contract}}, nil
}

// RestrictHolderThreshold is an auto generated Go binding around an Ethereum contract.
type RestrictHolderThreshold struct {
	RestrictHolderThresholdCaller     // Read-only binding to the contract
	RestrictHolderThresholdTransactor // Write-only binding to the contract
	RestrictHolderThresholdFilterer   // Log filterer for contract events
}

// RestrictHolderThresholdCaller is an auto generated read-only Go binding around an Ethereum contract.
type RestrictHolderThresholdCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RestrictHolderThresholdTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RestrictHolderThresholdTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RestrictHolderThresholdFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RestrictHolderThresholdFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RestrictHolderThresholdSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RestrictHolderThresholdSession struct {
	Contract     *RestrictHolderThreshold // Generic contract binding to set the session for
	CallOpts     bind.CallOpts            // Call options to use throughout this session
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// RestrictHolderThresholdCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RestrictHolderThresholdCallerSession struct {
	Contract *RestrictHolderThresholdCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                  // Call options to use throughout this session
}

// RestrictHolderThresholdTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RestrictHolderThresholdTransactorSession struct {
	Contract     *RestrictHolderThresholdTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                  // Transaction auth options to use throughout this session
}

// RestrictHolderThresholdRaw is an auto generated low-level Go binding around an Ethereum contract.
type RestrictHolderThresholdRaw struct {
	Contract *RestrictHolderThreshold // Generic contract binding to access the raw methods on
}

// RestrictHolderThresholdCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RestrictHolderThresholdCallerRaw struct {
	Contract *RestrictHolderThresholdCaller // Generic read-only contract binding to access the raw methods on
}

// RestrictHolderThresholdTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RestrictHolderThresholdTransactorRaw struct {
	Contract *RestrictHolderThresholdTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRestrictHolderThreshold creates a new instance of RestrictHolderThreshold, bound to a specific deployed contract.
func NewRestrictHolderThreshold(address common.Address, backend bind.ContractBackend) (*RestrictHolderThreshold, error) {
	contract, err := bindRestrictHolderThreshold(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RestrictHolderThreshold{RestrictHolderThresholdCaller: RestrictHolderThresholdCaller{contract: contract}, RestrictHolderThresholdTransactor: RestrictHolderThresholdTransactor{contract: contract}, RestrictHolderThresholdFilterer: RestrictHolderThresholdFilterer{contract: contract}}, nil
}

// NewRestrictHolderThresholdCaller creates a new read-only instance of RestrictHolderThreshold, bound to a specific deployed contract.
func NewRestrictHolderThresholdCaller(address common.Address, caller bind.ContractCaller) (*RestrictHolderThresholdCaller, error) {
	contract, err := bindRestrictHolderThreshold(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RestrictHolderThresholdCaller{contract: contract}, nil
}

// NewRestrictHolderThresholdTransactor creates a new write-only instance of RestrictHolderThreshold, bound to a specific deployed contract.
func NewRestrictHolderThresholdTransactor(address common.Address, transactor bind.ContractTransactor) (*RestrictHolderThresholdTransactor, error) {
	contract, err := bindRestrictHolderThreshold(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RestrictHolderThresholdTransactor{contract: contract}, nil
}

// NewRestrictHolderThresholdFilterer creates a new log filterer instance of RestrictHolderThreshold, bound to a specific deployed contract.
func NewRestrictHolderThresholdFilterer(address common.Address, filterer bind.ContractFilterer) (*RestrictHolderThresholdFilterer, error) {
	contract, err := bindRestrictHolderThreshold(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RestrictHolderThresholdFilterer{contract: contract}, nil
}

// bindRestrictHolderThreshold binds a generic wrapper to an already deployed contract.
func bindRestrictHolderThreshold(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RestrictHolderThresholdABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RestrictHolderThreshold *RestrictHolderThresholdRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RestrictHolderThreshold.Contract.RestrictHolderThresholdCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RestrictHolderThreshold *RestrictHolderThresholdRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.RestrictHolderThresholdTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RestrictHolderThreshold *RestrictHolderThresholdRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.RestrictHolderThresholdTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RestrictHolderThreshold *RestrictHolderThresholdCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RestrictHolderThreshold.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.contract.Transact(opts, method, params...)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdCaller) ZEROADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RestrictHolderThreshold.contract.Call(opts, out, "ZERO_ADDRESS")
	return *ret0, err
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) ZEROADDRESS() (common.Address, error) {
	return _RestrictHolderThreshold.Contract.ZEROADDRESS(&_RestrictHolderThreshold.CallOpts)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdCallerSession) ZEROADDRESS() (common.Address, error) {
	return _RestrictHolderThreshold.Contract.ZEROADDRESS(&_RestrictHolderThreshold.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_RestrictHolderThreshold *RestrictHolderThresholdCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _RestrictHolderThreshold.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) Name() (string, error) {
	return _RestrictHolderThreshold.Contract.Name(&_RestrictHolderThreshold.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_RestrictHolderThreshold *RestrictHolderThresholdCallerSession) Name() (string, error) {
	return _RestrictHolderThreshold.Contract.Name(&_RestrictHolderThreshold.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RestrictHolderThreshold.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) Owner() (common.Address, error) {
	return _RestrictHolderThreshold.Contract.Owner(&_RestrictHolderThreshold.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_RestrictHolderThreshold *RestrictHolderThresholdCallerSession) Owner() (common.Address, error) {
	return _RestrictHolderThreshold.Contract.Owner(&_RestrictHolderThreshold.CallOpts)
}

// Test is a free data retrieval call binding the contract method 0x0b6dedfd.
//
// Solidity: function test(compliance address, token address, initiator address, from address, to address, tokens uint256) constant returns(s string)
func (_RestrictHolderThreshold *RestrictHolderThresholdCaller) Test(opts *bind.CallOpts, compliance common.Address, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _RestrictHolderThreshold.contract.Call(opts, out, "test", compliance, token, initiator, from, to, tokens)
	return *ret0, err
}

// Test is a free data retrieval call binding the contract method 0x0b6dedfd.
//
// Solidity: function test(compliance address, token address, initiator address, from address, to address, tokens uint256) constant returns(s string)
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) Test(compliance common.Address, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _RestrictHolderThreshold.Contract.Test(&_RestrictHolderThreshold.CallOpts, compliance, token, initiator, from, to, tokens)
}

// Test is a free data retrieval call binding the contract method 0x0b6dedfd.
//
// Solidity: function test(compliance address, token address, initiator address, from address, to address, tokens uint256) constant returns(s string)
func (_RestrictHolderThreshold *RestrictHolderThresholdCallerSession) Test(compliance common.Address, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _RestrictHolderThreshold.Contract.Test(&_RestrictHolderThreshold.CallOpts, compliance, token, initiator, from, to, tokens)
}

// Check is a paid mutator transaction binding the contract method 0x803fcd43.
//
// Solidity: function check(token address, initiator address, from address, to address, tokens uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) Check(opts *bind.TransactOpts, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "check", token, initiator, from, to, tokens)
}

// Check is a paid mutator transaction binding the contract method 0x803fcd43.
//
// Solidity: function check(token address, initiator address, from address, to address, tokens uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) Check(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.Check(&_RestrictHolderThreshold.TransactOpts, token, initiator, from, to, tokens)
}

// Check is a paid mutator transaction binding the contract method 0x803fcd43.
//
// Solidity: function check(token address, initiator address, from address, to address, tokens uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) Check(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.Check(&_RestrictHolderThreshold.TransactOpts, token, initiator, from, to, tokens)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) Kill() (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.Kill(&_RestrictHolderThreshold.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) Kill() (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.Kill(&_RestrictHolderThreshold.TransactOpts)
}

// SetNonAccreditedInvestorLimit is a paid mutator transaction binding the contract method 0x86b9a0b6.
//
// Solidity: function setNonAccreditedInvestorLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) SetNonAccreditedInvestorLimit(opts *bind.TransactOpts, c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "setNonAccreditedInvestorLimit", c, symbol, limit)
}

// SetNonAccreditedInvestorLimit is a paid mutator transaction binding the contract method 0x86b9a0b6.
//
// Solidity: function setNonAccreditedInvestorLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) SetNonAccreditedInvestorLimit(c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.SetNonAccreditedInvestorLimit(&_RestrictHolderThreshold.TransactOpts, c, symbol, limit)
}

// SetNonAccreditedInvestorLimit is a paid mutator transaction binding the contract method 0x86b9a0b6.
//
// Solidity: function setNonAccreditedInvestorLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) SetNonAccreditedInvestorLimit(c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.SetNonAccreditedInvestorLimit(&_RestrictHolderThreshold.TransactOpts, c, symbol, limit)
}

// SetTotalLimit is a paid mutator transaction binding the contract method 0xd0453e33.
//
// Solidity: function setTotalLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) SetTotalLimit(opts *bind.TransactOpts, c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "setTotalLimit", c, symbol, limit)
}

// SetTotalLimit is a paid mutator transaction binding the contract method 0xd0453e33.
//
// Solidity: function setTotalLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) SetTotalLimit(c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.SetTotalLimit(&_RestrictHolderThreshold.TransactOpts, c, symbol, limit)
}

// SetTotalLimit is a paid mutator transaction binding the contract method 0xd0453e33.
//
// Solidity: function setTotalLimit(c address, symbol string, limit uint256) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) SetTotalLimit(c common.Address, symbol string, limit *big.Int) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.SetTotalLimit(&_RestrictHolderThreshold.TransactOpts, c, symbol, limit)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) TransferOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "transferOwner", newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.TransferOwner(&_RestrictHolderThreshold.TransactOpts, newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.TransferOwner(&_RestrictHolderThreshold.TransactOpts, newOwner)
}

// UpdateNonAccreditedInvestor is a paid mutator transaction binding the contract method 0xaa993c85.
//
// Solidity: function updateNonAccreditedInvestor(c address, symbol string, addr address, adding bool) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactor) UpdateNonAccreditedInvestor(opts *bind.TransactOpts, c common.Address, symbol string, addr common.Address, adding bool) (*types.Transaction, error) {
	return _RestrictHolderThreshold.contract.Transact(opts, "updateNonAccreditedInvestor", c, symbol, addr, adding)
}

// UpdateNonAccreditedInvestor is a paid mutator transaction binding the contract method 0xaa993c85.
//
// Solidity: function updateNonAccreditedInvestor(c address, symbol string, addr address, adding bool) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdSession) UpdateNonAccreditedInvestor(c common.Address, symbol string, addr common.Address, adding bool) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.UpdateNonAccreditedInvestor(&_RestrictHolderThreshold.TransactOpts, c, symbol, addr, adding)
}

// UpdateNonAccreditedInvestor is a paid mutator transaction binding the contract method 0xaa993c85.
//
// Solidity: function updateNonAccreditedInvestor(c address, symbol string, addr address, adding bool) returns()
func (_RestrictHolderThreshold *RestrictHolderThresholdTransactorSession) UpdateNonAccreditedInvestor(c common.Address, symbol string, addr common.Address, adding bool) (*types.Transaction, error) {
	return _RestrictHolderThreshold.Contract.UpdateNonAccreditedInvestor(&_RestrictHolderThreshold.TransactOpts, c, symbol, addr, adding)
}

// RestrictHolderThresholdOwnerTransferredIterator is returned from FilterOwnerTransferred and is used to iterate over the raw logs and unpacked data for OwnerTransferred events raised by the RestrictHolderThreshold contract.
type RestrictHolderThresholdOwnerTransferredIterator struct {
	Event *RestrictHolderThresholdOwnerTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RestrictHolderThresholdOwnerTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RestrictHolderThresholdOwnerTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RestrictHolderThresholdOwnerTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RestrictHolderThresholdOwnerTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RestrictHolderThresholdOwnerTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RestrictHolderThresholdOwnerTransferred represents a OwnerTransferred event raised by the RestrictHolderThreshold contract.
type RestrictHolderThresholdOwnerTransferred struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerTransferred is a free log retrieval operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_RestrictHolderThreshold *RestrictHolderThresholdFilterer) FilterOwnerTransferred(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*RestrictHolderThresholdOwnerTransferredIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _RestrictHolderThreshold.contract.FilterLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &RestrictHolderThresholdOwnerTransferredIterator{contract: _RestrictHolderThreshold.contract, event: "OwnerTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnerTransferred is a free log subscription operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_RestrictHolderThreshold *RestrictHolderThresholdFilterer) WatchOwnerTransferred(opts *bind.WatchOpts, sink chan<- *RestrictHolderThresholdOwnerTransferred, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _RestrictHolderThreshold.contract.WatchLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RestrictHolderThresholdOwnerTransferred)
				if err := _RestrictHolderThreshold.contract.UnpackLog(event, "OwnerTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
