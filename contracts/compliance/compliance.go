// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package compliance

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// ComplianceABI is the input ABI used to generate the binding from.
const ComplianceABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setLocked\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransferTest\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"adminAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"},{\"name\":\"rules\",\"type\":\"address[]\"}],\"name\":\"setRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"kind\",\"type\":\"uint8\"}],\"name\":\"getRules\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canOverride\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"initiator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setRegistryAndComplianceStore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"store\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"name\":\"count\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"canIssue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"r\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"}]"

// ComplianceBin is the compiled bytecode used for deploying new contracts.
const ComplianceBin = `6080604052600180546001600160a01b031916905534801561002057600080fd5b5060405161287e38038061287e8339818101604052604081101561004357600080fd5b508051602090910151600080546001600160a01b03199081163317909155600580546001600160a01b03948516610100026001600160a81b0319909116179055600680549390921692169190911790556127dc806100a26000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063538ba4f9116100cd5780638da5cb5b11610081578063a4e2d63411610066578063a4e2d634146104ce578063a5de3619146104d6578063fd8258bd146104f057610151565b80638da5cb5b146104be578063975057e7146104c657610151565b80636d62a4fe116100b25780636d62a4fe1461044c5780637b1039991461048857806389ef81261461049057610151565b8063538ba4f9146104085780635acba2011461041057610151565b806330f047c31161012457806345178acb1161010957806345178acb146103355780634b0bddd2146103b45780634fb2e45d146103e257610151565b806330f047c3146102a557806341c0e1b51461032d57610151565b8063211e28b61461015657806324d7806c146101775780632606b4c5146101b15780632bdbc56f1461026c575b600080fd5b6101756004803603602081101561016c57600080fd5b5035151561052c565b005b61019d6004803603602081101561018d57600080fd5b50356001600160a01b03166105fd565b604080519115158252519081900360200190f35b6101f7600480360360a08110156101c757600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135909116906080013561062c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610231578181015183820152602001610219565b50505050905090810190601f16801561025e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102896004803603602081101561028257600080fd5b5035610efa565b604080516001600160a01b039092168252519081900360200190f35b610175600480360360608110156102bb57600080fd5b6001600160a01b038235169160ff602082013516918101906060810160408201356401000000008111156102ee57600080fd5b82018360208201111561030057600080fd5b8035906020019184602083028401116401000000008311171561032257600080fd5b509092509050610f0d565b61017561113f565b6103646004803603604081101561034b57600080fd5b5080356001600160a01b0316906020013560ff166111c7565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103a0578181015183820152602001610388565b505050509050019250505060405180910390f35b610175600480360360408110156103ca57600080fd5b506001600160a01b0381351690602001351515611427565b610175600480360360208110156103f857600080fd5b50356001600160a01b03166115dd565b61028961174f565b61019d6004803603608081101561042657600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561175e565b61019d6004803603608081101561046257600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561184b565b6102896118a0565b610175600480360360408110156104a657600080fd5b506001600160a01b03813581169160200135166118b4565b61028961197d565b61028961198c565b61019d61199b565b6104de6119a4565b60408051918252519081900360200190f35b61019d6004803603608081101561050657600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356119aa565b6000546001600160a01b0316331480610551575061055160023363ffffffff6119e516565b6105a2576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b60055460ff16151581151514156105ea5760405162461bcd60e51b81526004018080602001828103825260288152602001806127806028913960400191505060405180910390fd5b6005805460ff1916911515919091179055565b600080546001600160a01b0383811691161480610626575061062660028363ffffffff6119e516565b92915050565b600554604080516375cd51ed60e01b81526001600160a01b0386811660048301529151606093849361010090910416916375cd51ed916024808301926020929190829003018186803b15801561068157600080fd5b505afa158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b50516106ef5750604080517f2246726f6d2061646472657373206e6f742077686974656c697374656422000060208201528151808203601e018152603e9091019091525b600554604080516375cd51ed60e01b81526001600160a01b0387811660048301529151610100909304909116916375cd51ed91602480820192602092909190829003018186803b15801561074257600080fd5b505afa158015610756573d6000803e3d6000fd5b505050506040513d602081101561076c57600080fd5b50516108865780600082511161079157604051806020016040528060008152506107ac565b604051806040016040528060018152602001600b60fa1b8152505b6040516020018083805190602001908083835b602083106107de5780518252601f1990920191602091820191016107bf565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106108265780518252601f199092019160209182019101610807565b6001836020036101000a038019825116818451168082178552505050505050905001807f22546f2061646472657373206e6f742077686974656c69737465642200000000815250601c019250505060405160208183030381529060405290505b80511561091457806040516020018080605b60f81b81525060010182805190602001908083835b602083106108cc5780518252601f1990920191602091820191016108ad565b6001836020036101000a03801982511681845116808217855250505050505090500180605d60f81b815250600101915050604051602081830303815290604052915050610ef1565b60055460408051636f6072eb60e01b81526001600160a01b03888116600483015282516000948594859461010090920490931692636f6072eb92602480840193829003018186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d604081101561099257600080fd5b50805160209091015160015491935091506001600160a01b03808316911614610b18578360008551116109d457604051806020016040528060008152506109ef565b604051806040016040528060018152602001600b60fa1b8152505b610a01836001600160a01b0316611a1a565b6040516020018084805190602001908083835b60208310610a335780518252601f199092019160209182019101610a14565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610a7b5780518252601f199092019160209182019101610a5c565b6001836020036101000a0380198251168184511680821785525050505050509050018061273a6024913960240182805190602001908083835b60208310610ad35780518252601f199092019160209182019101610ab4565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b60055460408051636f6072eb60e01b81526001600160a01b038a8116600483015282516101009094041692636f6072eb92602480840193919291829003018186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d6040811015610b9057600080fd5b50805160209091015160015491945091506001600160a01b03808316911614610d1657836000855111610bd25760405180602001604052806000815250610bed565b604051806040016040528060018152602001600b60fa1b8152505b610bff836001600160a01b0316611a1a565b6040516020018084805190602001908083835b60208310610c315780518252601f199092019160209182019101610c12565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610c795780518252601f199092019160209182019101610c5a565b6001836020036101000a0380198251168184511680821785525050505050509050018061275e6022913960220182805190602001908083835b60208310610cd15780518252601f199092019160209182019101610cb2565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b6060610d268b8b8b8b878c611b98565b90508460008651118015610d3b575060008251115b610d545760405180602001604052806000815250610d6f565b604051806040016040528060018152602001600b60fa1b8152505b826040516020018084805190602001908083835b60208310610da25780518252601f199092019160209182019101610d83565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310610dea5780518252601f199092019160209182019101610dcb565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610e325780518252601f199092019160209182019101610e13565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040529450846040516020018080605b60f81b81525060010182805190602001908083835b60208310610ea95780518252601f199092019160209182019101610e8a565b6001836020036101000a03801982511681845116808217855250505050505090500180605d60f81b815250600101915050604051602081830303815290604052955050505050505b95945050505050565b600061062660028363ffffffff61204616565b6000546001600160a01b0316331480610f325750610f3260023363ffffffff6119e516565b610f83576040805162461bcd60e51b815260206004820152601960248201527f41646d696e206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b60608115610faa576040519050606436038082016040526020810382528060846020840137505b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b602080840191825293516001600160a01b0390951694632e28d084948b938b93929091019182918083835b602083106110195780518252601f199092019160209182019101610ffa565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b8152600101935050505060405160208183030381529060405280519060200120836040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110d35781810151838201526020016110bb565b50505050905090810190601f1680156111005780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633148061116857506001546000546001600160a01b039081169116145b6111b9576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b6000546001600160a01b0316ff5b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b6020808401918252935160609586956001600160a01b039091169463c031a1809490938a938a9301918291908083835b6020831061123b5780518252601f19909201916020918201910161121c565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b81526001019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156112d657600080fd5b505afa1580156112ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561131357600080fd5b81019080805164010000000081111561132b57600080fd5b8201602081018481111561133e57600080fd5b815164010000000081118282018710171561135857600080fd5b50509291905050509050602081518161136d57fe5b06156113c0576040805162461bcd60e51b815260206004820152601360248201527f52756c65732061726520636f7272757074656400000000000000000000000000604482015290519081900360640190fd5b606060208251816113cd57fe5b046040519080825280602002602001820160405280156113f7578160200160208202803883390190505b5080519091501561141f5760205b8251811161141d578281015182820152602001611405565b505b949350505050565b6000546001600160a01b031633148061145057506001546000546001600160a01b039081169116145b6114a1576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b8015611542576114b860028363ffffffff6120cc16565b611509576040805162461bcd60e51b815260206004820152601360248201527f556e61626c6520746f206164642061646d696e00000000000000000000000000604482015290519081900360640190fd5b6040516001600160a01b038316907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a26115d9565b61155360028363ffffffff61217116565b6115a4576040805162461bcd60e51b815260206004820152601660248201527f556e61626c6520746f2072656d6f76652061646d696e00000000000000000000604482015290519081900360640190fd5b6040516001600160a01b038316907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a25b5050565b6000546001600160a01b031633148061160657506001546000546001600160a01b039081169116145b611657576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b6000546001600160a01b03828116911614156116a45760405162461bcd60e51b81526004018080602001828103825260258152602001806127156025913960400191505060405180910390fd5b6001600160a01b0381166116ff576040805162461bcd60e51b815260206004820181905260248201527f4e6577204f776e65722063616e6e6f74206265207a65726f2061646472657373604482015290519081900360640190fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c99190a35050565b6001546001600160a01b031681565b60003361176a866105fd565b806117e45750806001600160a01b0316631d1438486040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a957600080fd5b505afa1580156117bd573d6000803e3d6000fd5b505050506040513d60208110156117d357600080fd5b50516001600160a01b038781169116145b611835576040805162461bcd60e51b815260206004820152601860248201527f41646d696e206f72206973737565722072657175697265640000000000000000604482015290519081900360640190fd5b61183e8461225c565b5060019695505050505050565b6000806118578561225c565b90506118628461225c565b50846001600160a01b0316866001600160a01b031614611887576118858661225c565b505b611894868686848761241a565b50600195945050505050565b60055461010090046001600160a01b031681565b6000546001600160a01b03163314806118dd57506001546000546001600160a01b039081169116145b61192e576040805162461bcd60e51b815260206004820152601960248201527f4f776e6572206163636f756e7420697320726571756972656400000000000000604482015290519081900360640190fd5b600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0394851602179055600680546001600160a01b03191691909216179055565b6000546001600160a01b031681565b6006546001600160a01b031681565b60055460ff1681565b60025481565b60006119b58361225c565b50836001600160a01b0316856001600160a01b0316146119da576119d88461225c565b505b506001949350505050565b6001600160a01b03811660009081526001830160205260408120546000190181811280159061141f5750925490921292915050565b60408051602a8082526060828101909352829190602082018180388339019050509050603060f81b81600081518110611a4f57fe5b60200101906001600160f81b031916908160001a905350607860f81b81600181518110611a7857fe5b60200101906001600160f81b031916908160001a90535060005b6014811015611b915760008160130360080260020a856001600160a01b031681611ab857fe5b0460f81b9050600060108260f81c60ff1681611ad057fe5b0460f881811b9250601060ff90921691820284821c03901b90600a11611aff578160f81c60570160f81b611b0a565b8160f81c60300160f81b5b858560020260020181518110611b1c57fe5b60200101906001600160f81b031916908160001a905350600a60f882901c10611b4e578060f81c60570160f81b611b59565b8060f81c60300160f81b5b858560020260030181518110611b6b57fe5b60200101906001600160f81b031916908160001a9053505060019092019150611a929050565b5092915050565b60065460408051808201825260108082526f436f6d706c69616e63652e72756c657360801b6020808401918252935160609586956001600160a01b039091169463c031a1809490938e938b9301918291908083835b60208310611c0c5780518252601f199092019160209182019101611bed565b6001836020036101000a038019825116818451168082178552505050505050905001836001600160a01b03166001600160a01b031660601b81526014018260ff1660ff1660f81b81526001019350505050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015611ca757600080fd5b505afa158015611cbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611ce457600080fd5b810190808051640100000000811115611cfc57600080fd5b82016020810184811115611d0f57600080fd5b8151640100000000811182820187101715611d2957600080fd5b5050805190945015159250611d5191505057505060408051602081019091526000815261203c565b6020815181611d5c57fe5b0615611da5575050604080517f2252756c65732061726520636f72727570746564220000000000000000000000602082015281518082036015018152603590910190915261203c565b6060600060205b835181116120355783810151604080517f0b6dedfd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038e811660248301528d811660448301528c811660648301528b8116608483015260a482018a9052915192945060609291851691630b6dedfd9160c480820192600092909190829003018186803b158015611e4657600080fd5b505afa158015611e5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611e8357600080fd5b810190808051640100000000811115611e9b57600080fd5b82016020810184811115611eae57600080fd5b8151640100000000811182820187101715611ec857600080fd5b5050805190945015925061202c91505057836000855111611ef85760405180602001604052806000815250611f13565b604051806040016040528060018152602001600b60fa1b8152505b826040516020018084805190602001908083835b60208310611f465780518252601f199092019160209182019101611f27565b51815160209384036101000a600019018019909216911617905286519190930192860191508083835b60208310611f8e5780518252601f199092019160209182019101611f6f565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b81525060010182805190602001908083835b60208310611fe75780518252601f199092019160209182019101611fc8565b6001836020036101000a03801982511681845116808217855250505050505090500180601160f91b815250600101935050505060405160208183030381529060405293505b50602001611dac565b5090925050505b9695505050505050565b60008082121580156120585750825482125b6120a9576040805162461bcd60e51b815260206004820152601860248201527f496e646578206f757473696465206f6620626f756e64732e0000000000000000604482015290519081900360640190fd5b50600101600090815260029190910160205260409020546001600160a01b031690565b60006001600160a01b0382166120e457506000610626565b6001600160a01b0382166000908152600184016020526040812054600019019081128015906121135750835481125b15612122576000915050610626565b5050815460019081018084556001600160a01b0383166000818152838601602090815260408083208590559382526002870190529190912080546001600160a01b031916909117905592915050565b6001600160a01b0381166000908152600180840160205260408220549081128061219b5750835481135b156121aa576000915050610626565b835481121561221157835460009081526002850160208181526040808420546001600160a01b03168085526001890183528185208690558585529290915280832080546001600160a01b031990811690931790558654835290912080549091169055612230565b6000818152600285016020526040902080546001600160a01b03191690555b50506001600160a01b031660009081526001828101602052604082209190915581546000190190915590565b60055460408051636f6072eb60e01b81526001600160a01b0384811660048301528251600094859461010090910490921692636f6072eb926024808301939192829003018186803b1580156122b057600080fd5b505afa1580156122c4573d6000803e3d6000fd5b505050506040513d60408110156122da57600080fd5b5080516020909101516001549094509091506001600160a01b0380851691161461062657612310836001600160a01b0316611a1a565b60405160200180807f41646472657373206f72206c696e656167652069732066726f7a656e3a200000815250601e0182805190602001908083835b6020831061236a5780518252601f19909201916020918201910161234b565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183529384905262461bcd60e51b84526004840181815282516024860152825192965094508493604401925085019080838360005b838110156123df5781810151838201526020016123c7565b50505050905090810190601f16801561240c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006040518060400160405280601081526020016f436f6d706c69616e63652e72756c657360801b81525033846040516020018084805190602001908083835b602083106124795780518252601f19909201916020918201910161245a565b51815160209384036101000a6000190180199092169116179052606096871b6bffffffffffffffffffffffff19169190930190815260f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660148501525060408051808503600a1901815260158501808352815191909301206006547fc031a180000000000000000000000000000000000000000000000000000000009093526019850181905290519096509394506001600160a01b03169263c031a180926039808201935060009291829003018186803b15801561255c57600080fd5b505afa158015612570573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561259957600080fd5b8101908080516401000000008111156125b157600080fd5b820160208101848111156125c457600080fd5b81516401000000008111828201871017156125de57600080fd5b50508051909450151592506125f791505057505061270d565b602081518161260257fe5b0615612655576040805162461bcd60e51b815260206004820152601360248201527f52756c65732061726520636f7272757074656400000000000000000000000000604482015290519081900360640190fd5b600060205b825181116111345782810151604080517f803fcd430000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b038c811660248301528b811660448301528a811660648301526084820189905291519294509084169163803fcd439160a48082019260009290919082900301818387803b1580156126ea57600080fd5b505af11580156126fe573d6000803e3d6000fd5b5050505060208101905061265a565b505050505056fe4e6577204f776e65722063616e6e6f74206265207468652063757272656e74206f776e65722246726f6d2061646472657373206f72206c696e656167652069732066726f7a656e3a2022546f2061646472657373206f72206c696e656167652069732066726f7a656e3a20436f6e747261637420616c726561647920696e20726571756573746564206c6f636b207374617465a265627a7a7230582008cb1587b441f5824adf95a3a9b4d9cf58e0b9705658439c5b5ede3c1f654f2364736f6c634300050a0032`

// DeployCompliance deploys a new Ethereum contract, binding an instance of Compliance to it.
func DeployCompliance(auth *bind.TransactOpts, backend bind.ContractBackend, r common.Address, s common.Address) (common.Address, *types.Transaction, *Compliance, error) {
	parsed, err := abi.JSON(strings.NewReader(ComplianceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ComplianceBin), backend, r, s)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Compliance{ComplianceCaller: ComplianceCaller{contract: contract}, ComplianceTransactor: ComplianceTransactor{contract: contract}, ComplianceFilterer: ComplianceFilterer{contract: contract}}, nil
}

// Compliance is an auto generated Go binding around an Ethereum contract.
type Compliance struct {
	ComplianceCaller     // Read-only binding to the contract
	ComplianceTransactor // Write-only binding to the contract
	ComplianceFilterer   // Log filterer for contract events
}

// ComplianceCaller is an auto generated read-only Go binding around an Ethereum contract.
type ComplianceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ComplianceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ComplianceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ComplianceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ComplianceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ComplianceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ComplianceSession struct {
	Contract     *Compliance       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ComplianceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ComplianceCallerSession struct {
	Contract *ComplianceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// ComplianceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ComplianceTransactorSession struct {
	Contract     *ComplianceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// ComplianceRaw is an auto generated low-level Go binding around an Ethereum contract.
type ComplianceRaw struct {
	Contract *Compliance // Generic contract binding to access the raw methods on
}

// ComplianceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ComplianceCallerRaw struct {
	Contract *ComplianceCaller // Generic read-only contract binding to access the raw methods on
}

// ComplianceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ComplianceTransactorRaw struct {
	Contract *ComplianceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCompliance creates a new instance of Compliance, bound to a specific deployed contract.
func NewCompliance(address common.Address, backend bind.ContractBackend) (*Compliance, error) {
	contract, err := bindCompliance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Compliance{ComplianceCaller: ComplianceCaller{contract: contract}, ComplianceTransactor: ComplianceTransactor{contract: contract}, ComplianceFilterer: ComplianceFilterer{contract: contract}}, nil
}

// NewComplianceCaller creates a new read-only instance of Compliance, bound to a specific deployed contract.
func NewComplianceCaller(address common.Address, caller bind.ContractCaller) (*ComplianceCaller, error) {
	contract, err := bindCompliance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ComplianceCaller{contract: contract}, nil
}

// NewComplianceTransactor creates a new write-only instance of Compliance, bound to a specific deployed contract.
func NewComplianceTransactor(address common.Address, transactor bind.ContractTransactor) (*ComplianceTransactor, error) {
	contract, err := bindCompliance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ComplianceTransactor{contract: contract}, nil
}

// NewComplianceFilterer creates a new log filterer instance of Compliance, bound to a specific deployed contract.
func NewComplianceFilterer(address common.Address, filterer bind.ContractFilterer) (*ComplianceFilterer, error) {
	contract, err := bindCompliance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ComplianceFilterer{contract: contract}, nil
}

// bindCompliance binds a generic wrapper to an already deployed contract.
func bindCompliance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ComplianceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Compliance *ComplianceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Compliance.Contract.ComplianceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Compliance *ComplianceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Compliance.Contract.ComplianceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Compliance *ComplianceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Compliance.Contract.ComplianceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Compliance *ComplianceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Compliance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Compliance *ComplianceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Compliance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Compliance *ComplianceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Compliance.Contract.contract.Transact(opts, method, params...)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_Compliance *ComplianceCaller) ZEROADDRESS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "ZERO_ADDRESS")
	return *ret0, err
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_Compliance *ComplianceSession) ZEROADDRESS() (common.Address, error) {
	return _Compliance.Contract.ZEROADDRESS(&_Compliance.CallOpts)
}

// ZEROADDRESS is a free data retrieval call binding the contract method 0x538ba4f9.
//
// Solidity: function ZERO_ADDRESS() constant returns(address)
func (_Compliance *ComplianceCallerSession) ZEROADDRESS() (common.Address, error) {
	return _Compliance.Contract.ZEROADDRESS(&_Compliance.CallOpts)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_Compliance *ComplianceCaller) AdminAt(opts *bind.CallOpts, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "adminAt", index)
	return *ret0, err
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_Compliance *ComplianceSession) AdminAt(index *big.Int) (common.Address, error) {
	return _Compliance.Contract.AdminAt(&_Compliance.CallOpts, index)
}

// AdminAt is a free data retrieval call binding the contract method 0x2bdbc56f.
//
// Solidity: function adminAt(index int256) constant returns(address)
func (_Compliance *ComplianceCallerSession) AdminAt(index *big.Int) (common.Address, error) {
	return _Compliance.Contract.AdminAt(&_Compliance.CallOpts, index)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_Compliance *ComplianceCaller) Admins(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "admins")
	return *ret0, err
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_Compliance *ComplianceSession) Admins() (*big.Int, error) {
	return _Compliance.Contract.Admins(&_Compliance.CallOpts)
}

// Admins is a free data retrieval call binding the contract method 0xa5de3619.
//
// Solidity: function admins() constant returns(count int256)
func (_Compliance *ComplianceCallerSession) Admins() (*big.Int, error) {
	return _Compliance.Contract.Admins(&_Compliance.CallOpts)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_Compliance *ComplianceCaller) CanTransferTest(opts *bind.CallOpts, token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "canTransferTest", token, initiator, from, to, tokens)
	return *ret0, err
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_Compliance *ComplianceSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _Compliance.Contract.CanTransferTest(&_Compliance.CallOpts, token, initiator, from, to, tokens)
}

// CanTransferTest is a free data retrieval call binding the contract method 0x2606b4c5.
//
// Solidity: function canTransferTest(token address, initiator address, from address, to address, tokens uint256) constant returns(string)
func (_Compliance *ComplianceCallerSession) CanTransferTest(token common.Address, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (string, error) {
	return _Compliance.Contract.CanTransferTest(&_Compliance.CallOpts, token, initiator, from, to, tokens)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_Compliance *ComplianceCaller) GetRules(opts *bind.CallOpts, token common.Address, kind uint8) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "getRules", token, kind)
	return *ret0, err
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_Compliance *ComplianceSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _Compliance.Contract.GetRules(&_Compliance.CallOpts, token, kind)
}

// GetRules is a free data retrieval call binding the contract method 0x45178acb.
//
// Solidity: function getRules(token address, kind uint8) constant returns(address[])
func (_Compliance *ComplianceCallerSession) GetRules(token common.Address, kind uint8) ([]common.Address, error) {
	return _Compliance.Contract.GetRules(&_Compliance.CallOpts, token, kind)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_Compliance *ComplianceCaller) IsAdmin(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "isAdmin", addr)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_Compliance *ComplianceSession) IsAdmin(addr common.Address) (bool, error) {
	return _Compliance.Contract.IsAdmin(&_Compliance.CallOpts, addr)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(addr address) constant returns(bool)
func (_Compliance *ComplianceCallerSession) IsAdmin(addr common.Address) (bool, error) {
	return _Compliance.Contract.IsAdmin(&_Compliance.CallOpts, addr)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_Compliance *ComplianceCaller) IsLocked(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "isLocked")
	return *ret0, err
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_Compliance *ComplianceSession) IsLocked() (bool, error) {
	return _Compliance.Contract.IsLocked(&_Compliance.CallOpts)
}

// IsLocked is a free data retrieval call binding the contract method 0xa4e2d634.
//
// Solidity: function isLocked() constant returns(bool)
func (_Compliance *ComplianceCallerSession) IsLocked() (bool, error) {
	return _Compliance.Contract.IsLocked(&_Compliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Compliance *ComplianceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Compliance *ComplianceSession) Owner() (common.Address, error) {
	return _Compliance.Contract.Owner(&_Compliance.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Compliance *ComplianceCallerSession) Owner() (common.Address, error) {
	return _Compliance.Contract.Owner(&_Compliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Compliance *ComplianceCaller) Registry(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "registry")
	return *ret0, err
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Compliance *ComplianceSession) Registry() (common.Address, error) {
	return _Compliance.Contract.Registry(&_Compliance.CallOpts)
}

// Registry is a free data retrieval call binding the contract method 0x7b103999.
//
// Solidity: function registry() constant returns(address)
func (_Compliance *ComplianceCallerSession) Registry() (common.Address, error) {
	return _Compliance.Contract.Registry(&_Compliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_Compliance *ComplianceCaller) Store(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Compliance.contract.Call(opts, out, "store")
	return *ret0, err
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_Compliance *ComplianceSession) Store() (common.Address, error) {
	return _Compliance.Contract.Store(&_Compliance.CallOpts)
}

// Store is a free data retrieval call binding the contract method 0x975057e7.
//
// Solidity: function store() constant returns(address)
func (_Compliance *ComplianceCallerSession) Store() (common.Address, error) {
	return _Compliance.Contract.Store(&_Compliance.CallOpts)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactor) CanIssue(opts *bind.TransactOpts, issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "canIssue", issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanIssue(&_Compliance.TransactOpts, issuer, from, to, tokens)
}

// CanIssue is a paid mutator transaction binding the contract method 0xfd8258bd.
//
// Solidity: function canIssue(issuer address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactorSession) CanIssue(issuer common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanIssue(&_Compliance.TransactOpts, issuer, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactor) CanOverride(opts *bind.TransactOpts, admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "canOverride", admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanOverride(&_Compliance.TransactOpts, admin, from, to, tokens)
}

// CanOverride is a paid mutator transaction binding the contract method 0x5acba201.
//
// Solidity: function canOverride(admin address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactorSession) CanOverride(admin common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanOverride(&_Compliance.TransactOpts, admin, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactor) CanTransfer(opts *bind.TransactOpts, initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "canTransfer", initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanTransfer(&_Compliance.TransactOpts, initiator, from, to, tokens)
}

// CanTransfer is a paid mutator transaction binding the contract method 0x6d62a4fe.
//
// Solidity: function canTransfer(initiator address, from address, to address, tokens uint256) returns(bool)
func (_Compliance *ComplianceTransactorSession) CanTransfer(initiator common.Address, from common.Address, to common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _Compliance.Contract.CanTransfer(&_Compliance.TransactOpts, initiator, from, to, tokens)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Compliance *ComplianceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Compliance *ComplianceSession) Kill() (*types.Transaction, error) {
	return _Compliance.Contract.Kill(&_Compliance.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Compliance *ComplianceTransactorSession) Kill() (*types.Transaction, error) {
	return _Compliance.Contract.Kill(&_Compliance.TransactOpts)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_Compliance *ComplianceTransactor) SetAdmin(opts *bind.TransactOpts, addr common.Address, add bool) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "setAdmin", addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_Compliance *ComplianceSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _Compliance.Contract.SetAdmin(&_Compliance.TransactOpts, addr, add)
}

// SetAdmin is a paid mutator transaction binding the contract method 0x4b0bddd2.
//
// Solidity: function setAdmin(addr address, add bool) returns()
func (_Compliance *ComplianceTransactorSession) SetAdmin(addr common.Address, add bool) (*types.Transaction, error) {
	return _Compliance.Contract.SetAdmin(&_Compliance.TransactOpts, addr, add)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_Compliance *ComplianceTransactor) SetLocked(opts *bind.TransactOpts, locked bool) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "setLocked", locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_Compliance *ComplianceSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _Compliance.Contract.SetLocked(&_Compliance.TransactOpts, locked)
}

// SetLocked is a paid mutator transaction binding the contract method 0x211e28b6.
//
// Solidity: function setLocked(locked bool) returns()
func (_Compliance *ComplianceTransactorSession) SetLocked(locked bool) (*types.Transaction, error) {
	return _Compliance.Contract.SetLocked(&_Compliance.TransactOpts, locked)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_Compliance *ComplianceTransactor) SetRegistryAndComplianceStore(opts *bind.TransactOpts, r common.Address, s common.Address) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "setRegistryAndComplianceStore", r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_Compliance *ComplianceSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.SetRegistryAndComplianceStore(&_Compliance.TransactOpts, r, s)
}

// SetRegistryAndComplianceStore is a paid mutator transaction binding the contract method 0x89ef8126.
//
// Solidity: function setRegistryAndComplianceStore(r address, s address) returns()
func (_Compliance *ComplianceTransactorSession) SetRegistryAndComplianceStore(r common.Address, s common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.SetRegistryAndComplianceStore(&_Compliance.TransactOpts, r, s)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_Compliance *ComplianceTransactor) SetRules(opts *bind.TransactOpts, token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "setRules", token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_Compliance *ComplianceSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.SetRules(&_Compliance.TransactOpts, token, kind, rules)
}

// SetRules is a paid mutator transaction binding the contract method 0x30f047c3.
//
// Solidity: function setRules(token address, kind uint8, rules address[]) returns()
func (_Compliance *ComplianceTransactorSession) SetRules(token common.Address, kind uint8, rules []common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.SetRules(&_Compliance.TransactOpts, token, kind, rules)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_Compliance *ComplianceTransactor) TransferOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Compliance.contract.Transact(opts, "transferOwner", newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_Compliance *ComplianceSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.TransferOwner(&_Compliance.TransactOpts, newOwner)
}

// TransferOwner is a paid mutator transaction binding the contract method 0x4fb2e45d.
//
// Solidity: function transferOwner(newOwner address) returns()
func (_Compliance *ComplianceTransactorSession) TransferOwner(newOwner common.Address) (*types.Transaction, error) {
	return _Compliance.Contract.TransferOwner(&_Compliance.TransactOpts, newOwner)
}

// ComplianceAdminAddedIterator is returned from FilterAdminAdded and is used to iterate over the raw logs and unpacked data for AdminAdded events raised by the Compliance contract.
type ComplianceAdminAddedIterator struct {
	Event *ComplianceAdminAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ComplianceAdminAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ComplianceAdminAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ComplianceAdminAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ComplianceAdminAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ComplianceAdminAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ComplianceAdminAdded represents a AdminAdded event raised by the Compliance contract.
type ComplianceAdminAdded struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminAdded is a free log retrieval operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_Compliance *ComplianceFilterer) FilterAdminAdded(opts *bind.FilterOpts, admin []common.Address) (*ComplianceAdminAddedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _Compliance.contract.FilterLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return &ComplianceAdminAddedIterator{contract: _Compliance.contract, event: "AdminAdded", logs: logs, sub: sub}, nil
}

// WatchAdminAdded is a free log subscription operation binding the contract event 0x44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339.
//
// Solidity: e AdminAdded(admin indexed address)
func (_Compliance *ComplianceFilterer) WatchAdminAdded(opts *bind.WatchOpts, sink chan<- *ComplianceAdminAdded, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _Compliance.contract.WatchLogs(opts, "AdminAdded", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ComplianceAdminAdded)
				if err := _Compliance.contract.UnpackLog(event, "AdminAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ComplianceAdminRemovedIterator is returned from FilterAdminRemoved and is used to iterate over the raw logs and unpacked data for AdminRemoved events raised by the Compliance contract.
type ComplianceAdminRemovedIterator struct {
	Event *ComplianceAdminRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ComplianceAdminRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ComplianceAdminRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ComplianceAdminRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ComplianceAdminRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ComplianceAdminRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ComplianceAdminRemoved represents a AdminRemoved event raised by the Compliance contract.
type ComplianceAdminRemoved struct {
	Admin common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAdminRemoved is a free log retrieval operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_Compliance *ComplianceFilterer) FilterAdminRemoved(opts *bind.FilterOpts, admin []common.Address) (*ComplianceAdminRemovedIterator, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _Compliance.contract.FilterLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return &ComplianceAdminRemovedIterator{contract: _Compliance.contract, event: "AdminRemoved", logs: logs, sub: sub}, nil
}

// WatchAdminRemoved is a free log subscription operation binding the contract event 0xa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f.
//
// Solidity: e AdminRemoved(admin indexed address)
func (_Compliance *ComplianceFilterer) WatchAdminRemoved(opts *bind.WatchOpts, sink chan<- *ComplianceAdminRemoved, admin []common.Address) (event.Subscription, error) {

	var adminRule []interface{}
	for _, adminItem := range admin {
		adminRule = append(adminRule, adminItem)
	}

	logs, sub, err := _Compliance.contract.WatchLogs(opts, "AdminRemoved", adminRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ComplianceAdminRemoved)
				if err := _Compliance.contract.UnpackLog(event, "AdminRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ComplianceOwnerTransferredIterator is returned from FilterOwnerTransferred and is used to iterate over the raw logs and unpacked data for OwnerTransferred events raised by the Compliance contract.
type ComplianceOwnerTransferredIterator struct {
	Event *ComplianceOwnerTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ComplianceOwnerTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ComplianceOwnerTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ComplianceOwnerTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ComplianceOwnerTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ComplianceOwnerTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ComplianceOwnerTransferred represents a OwnerTransferred event raised by the Compliance contract.
type ComplianceOwnerTransferred struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerTransferred is a free log retrieval operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_Compliance *ComplianceFilterer) FilterOwnerTransferred(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*ComplianceOwnerTransferredIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Compliance.contract.FilterLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ComplianceOwnerTransferredIterator{contract: _Compliance.contract, event: "OwnerTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnerTransferred is a free log subscription operation binding the contract event 0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9.
//
// Solidity: e OwnerTransferred(oldOwner indexed address, newOwner indexed address)
func (_Compliance *ComplianceFilterer) WatchOwnerTransferred(opts *bind.WatchOpts, sink chan<- *ComplianceOwnerTransferred, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Compliance.contract.WatchLogs(opts, "OwnerTransferred", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ComplianceOwnerTransferred)
				if err := _Compliance.contract.UnpackLog(event, "OwnerTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
